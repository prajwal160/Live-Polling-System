  const calculatePercentage = (option) => {
    if (!results || Object.keys(results).length === 0) return 0;
    const totalVotes = Object.values(results).length;
    if (totalVotes === 0) return 0;
    
    const optionVotes = Object.values(results).filter(vote => vote === option.text).length;
    return Math.round((optionVotes / totalVotes) * 100);
  };

  const getVotesForOption = (option) => {
    if (!results) return 0;
    return Object.values(results).filter(vote => vote === option.text).length;
  };










const OptionText = styled.div`
  font-size: 14px;
  color: #2d3436;
`;

const Percentage = styled.div`
  font-weight: 600;
  font-size: 14px;
  color: #2d3436;
`;

const Progress = styled.div`
  width: 100%;
  height: 30px;
  background: #f0f0f0;
  border-radius: 15px;
  overflow: hidden;
`;

const ProgressFill = styled.div`
  height: 100%;
  width: ${props => Math.max(0, Math.min(100, props.width))}%;
  background: #6c5ce7;
  transition: width 0.3s ease;
`;








      <ResultsSection>
          <ResultsHeader>
            <h2>Live Results</h2>
            <TotalVotes>{Object.keys(results).length} votes</TotalVotes>
          </ResultsHeader>
          <Question>{currentPoll.question}</Question>
          <ResultsGrid>
            {currentPoll.options.map((option, index) => {
              const percentage = calculatePercentage(option);
              const votes = getVotesForOption(option);
              return (
                <ResultBar key={index}>
                  <ResultBarHeader>
                    <OptionInfo>
                      <OptionDot>{String.fromCharCode(65 + index)}</OptionDot>
                      <OptionText>{option.text}</OptionText>
                    </OptionInfo>
                    <Percentage>{percentage}%</Percentage>
                  </ResultBarHeader>
                  <Progress>
                    <ProgressFill width={percentage} />
                  </Progress>
                  <VoteCount>
                    {votes} {votes === 1 ? 'vote' : 'votes'}
                  </VoteCount>
                </ResultBar>
              );
            })}
          </ResultsGrid>
          <Timer>Time remaining: {Math.ceil(timeRemaining / 1000)}s</Timer>
        </ResultsSection>


below is student code

_______________________________________________________________________________

mongodb+srv://bt20cse160:GRgF5I1dh4Pf2OV7@cluster0.v4v4b.mongodb.net/live-polling?retryWrites=true&w=majority